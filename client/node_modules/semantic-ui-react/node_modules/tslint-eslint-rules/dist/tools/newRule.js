"use strict";
var rules_1 = require('../readme/rules');
var path = require('path');
function writeNewRule(ruleKebabName) {
    var ruleCamelName = rules_1.toCamelCase(ruleKebabName);
    var ruleTemplate = "/**\n * @license\n * Copyright 2016 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as ts from 'typescript';\nimport * as Lint from 'tslint';\n\nexport class Rule extends Lint.Rules.AbstractRule {\n    public static FAILURE_STRING = \"** ERROR MESSAGE HERE **\";\n\n    public apply(sourceFile: ts.SourceFile): Lint.RuleFailure[] {\n        const walker = new (sourceFile, this.getOptions());\n        return this.applyWithWalker(walker);\n    }\n}\n\nclass RuleWalker extends Lint.RuleWalker {\n    // ** RULE IMPLEMENTATION HERE **\n}\n";
    console.log('temp:', ruleTemplate);
    var projectDir = path.dirname(__dirname);
    var rulePath = path.join(projectDir, "./src/rules/" + ruleCamelName + "Rule.ts");
    console.log('rulePath:', rulePath);
}
exports.writeNewRule = writeNewRule;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvb2xzL25ld1J1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNCQUE0QixpQkFBaUIsQ0FBQyxDQUFBO0FBRTlDLElBQVksSUFBSSxXQUFNLE1BQU0sQ0FBQyxDQUFBO0FBRTdCLHNCQUE2QixhQUFxQjtJQUNoRCxJQUFNLGFBQWEsR0FBRyxtQkFBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2pELElBQU0sWUFBWSxHQUFHLHVsQ0FnQ3RCLENBQUM7SUFDQSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNuQyxJQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzNDLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLGlCQUFlLGFBQWEsWUFBUyxDQUFDLENBQUM7SUFDOUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFFckMsQ0FBQztBQXhDZSxvQkFBWSxlQXdDM0IsQ0FBQSIsImZpbGUiOiJ0b29scy9uZXdSdWxlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qbWxvcGV6L1dvcmtzcGFjZS90c2xpbnQtZXNsaW50LXJ1bGVzL3NyYyJ9
